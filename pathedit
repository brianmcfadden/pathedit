# Do not make this executable!
# use a . .command to invoke perhaps with an alias like pathed

if [ "$0" == "$BASH_SOURCE" ]
then
 echo Error. You must source this script
 echo E.g.: . $0
 exit 1
fi

if [  "$1" = "--alias" ]
then
  alias pathed=". $BASH_SOURCE"
  echo Alias created
else

  # Set up a temporary file that contains the path
  # and replace the colons with new-lines
  PATHEDIT_FN=$(mktemp)
  echo "$PATH" | tr ':' '\n' > "$PATHEDIT_FN"

  # remember last time
  PATHEDIT_OLD=$(ls -li $PATHEDIT_FN)

  # execute the editor as best we ecan
  command ${PATHEDIT_EDITOR:-${VISUAL:-${EDITOR:-vi}}} "$PATHEDIT_FN"

  # examine new date
  PATHEDIT_NEW=$(ls -li $PATHEDIT_FN)

  # if file changed and is not empty
  if [ "$PATHEDIT_OLD" = "$PATHEDIT_NEW" -o ! -s "$PATHEDIT_FN" ]
  then
    echo "No changes"
  else
    # set new path, ensuring that new-lines return to colons
    PATH=$( awk '{ if (NR > 1) { printf p; printf ":"; } p=$0; } END { print p; }' "$PATHEDIT_FN" )
    echo "PATH=${PATH}"
  fi

fi
